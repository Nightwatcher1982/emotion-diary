const e=async(e,o={})=>{const s=t(),n={headers:{"Content-Type":"application/json",...s&&{Authorization:`Token ${s}`}}},a={...n,...o,headers:{...n.headers,...o.headers}};try{const t=await fetch(`http://127.0.0.1:8000/api/v1${e}`,a);if(!t.ok){if(401===t.status)throw r(),i(),uni.reLaunch({url:"/pages/login/login"}),new Error("登录已过期，请重新登录");throw new Error(`HTTP error! status: ${t.status}`)}return await t.json()}catch(d){throw console.error("API请求失败:",d),d}},t=()=>uni.getStorageSync("token")||null,o=e=>{uni.setStorageSync("token",e)},r=()=>{uni.removeStorageSync("token")},s=()=>{const e=uni.getStorageSync("user");return e?JSON.parse(e):null},n=e=>{uni.setStorageSync("user",JSON.stringify(e))},i=()=>{uni.removeStorageSync("user")},a={login:t=>e("/auth/login/",{method:"POST",body:JSON.stringify(t)}),register:t=>e("/auth/register/",{method:"POST",body:JSON.stringify(t)}),sendSMS:t=>e("/auth/sms/send/",{method:"POST",body:JSON.stringify(t)}),phoneLogin:t=>e("/auth/phone/login/",{method:"POST",body:JSON.stringify(t)}),phoneRegister:t=>e("/auth/phone/register/",{method:"POST",body:JSON.stringify(t)}),wechatLogin:t=>e("/auth/wechat/login/",{method:"POST",body:JSON.stringify(t)}),getUserInfo:()=>e("/auth/profile/",{method:"GET"}),updateUserInfo:t=>e("/auth/profile/",{method:"PUT",body:JSON.stringify(t)}),updateProfile:t=>e("/auth/profile/",{method:"PATCH",body:JSON.stringify(t)}),logout:()=>e("/auth/logout/",{method:"POST"})},d={createRecord:t=>e("/emotions/records/",{method:"POST",body:JSON.stringify(t)}),getRecords:t=>{const o=t?new URLSearchParams(t).toString():"";return e("/emotions/records/"+(o?"?"+o:""),{method:"GET"})},getTodayRecords:()=>e("/emotions/records/today/",{method:"GET"}),getRecentRecords:()=>e("/emotions/records/recent/",{method:"GET"}),getRecord:t=>e(`/emotions/records/${t}/`,{method:"GET"}),updateRecord:(t,o)=>e(`/emotions/records/${t}/`,{method:"PUT",body:JSON.stringify(o)}),deleteRecord:t=>e(`/emotions/records/${t}/`,{method:"DELETE"})},h={getAnalysis:t=>e(`/ai/analysis/${t}/`,{method:"GET"}),getAnalysisHistory:t=>{const o=t?new URLSearchParams(t).toString():"";return e("/ai/analysis/history/"+(o?"?"+o:""),{method:"GET"})},realtimeAnalysis:t=>e("/ai/analyze/",{method:"POST",body:JSON.stringify(t)})};export{a,n as b,s as c,h as d,d as e,t as g,o as s};
